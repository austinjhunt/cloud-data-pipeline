# ---
# # Local VM should orchestrate cloud infrastructure
# # cloud, k8smaster, k8sworker are groups created dynamically by cloud-orchestrator role
# # they refer to both EC2 instances, the first EC2 instance, and the second EC2 instance respectively
- hosts: localvm
  remote_user: vagrant
  become: true
  gather_facts: true
  pre_tasks:
    # set up the local VM with apt packages and python requirements before doing anything else
    - name: Set up master playbook
      import_tasks: setup-master.yml
  roles:
    - cloud-orchestrator

# Run general Cloud VM setup on BOTH cloud VMs (EC2 Instances)
- hosts: cloud
  become: yes
  remote_user: ubuntu
  gather_facts: yes
  roles:
    - cloudvm
    - docker
    - k8s-node

# Run specific K8s Master setup on first cloud VM
- hosts: k8smaster
  become: yes
  remote_user: ubuntu
  gather_facts: yes
  roles:
    - k8s-master

# Run specific K8s Worker setup on second cloud VM (join cluster initialized by master)
- hosts: k8sworker
  become: yes
  remote_user: ubuntu
  gather_facts: yes
  roles:
    - k8s-worker

- hosts: k8smaster
  remote_user: ubuntu
  roles:
    - k8s-kickoff

- hosts: localvm
  remote_user: vagrant
  tasks:
    - name: Wait for Kubernetes Cluster to run for 1 minute
      wait_for:
        timeout: 60

# LocalVM should clean up (stop) the cloud infrastructure now
- hosts: localvm
  remote_user: vagrant
  become: true
  gather_facts: true
  pre_tasks:
    # set up the local VM with apt packages and python requirements before doing anything else
    - name: Set up!
      import_tasks: setup-master.yml
  roles:
    - cloud-terminator



...