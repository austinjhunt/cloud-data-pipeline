# -*- mode: ruby -*-
# vi: set ft=ruby :

# Use this Vagrant file to create local VirtualBox VM (i.e. VM1.1)
Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/focal64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share this entire project repository with the Vagrant VM at the path /vagrant
  config.vm.synced_folder "../", "/vagrant"

  # Use the VirtualBox provider with the GUI
  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    vb.gui = true
    # Customize the amount of memory on the VM:
    vb.memory = "1024"
  end

  #  Run Ansible from the Vagrant Host  #
  config.vm.provision "ansible_local" do |ansible|
      # ansible.playbook = "/vagrant/automation/master.yml"
      # ansible.playbook = "/vagrant/automation/docker_install.yml"
      ansible.playbook = "/vagrant/automation/k8s_install_master.yml"
      # ansible.playbook = "/vagrant/automation/k8s_install_worker.yml"
      ansible.verbose = true
      ansible.install = true # installs ansible and Python on VM
      ansible.limit = "all"
      ansible.inventory_path = "/vagrant/automation/hosts.ini"
  end

end
