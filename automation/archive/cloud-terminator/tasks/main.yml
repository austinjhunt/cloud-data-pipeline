# Orchestrates the creation of two cloud VMs in AWS EC2
- name: Set up environment variables to work with AWS EC2
  shell: . /vagrant/setup-env.sh && env
  register: env_file_result

- name: Parse environment
  set_fact:
    env_vars: "{{ ('{' + env_file_result.stdout_lines | map('regex_replace', '([^=]*)=(.*)', '\"\\1\": \"\\2\"') | join(',') + '}') | from_json }}"

- name: Set AWS Secret Access Key
  command: echo $AWS_SECRET_ACCESS_KEY
  environment: "{{ env_vars }}"
  register: aws_secret_access_key

- name: Set AWS Access Key ID
  command: echo $AWS_ACCESS_KEY_ID
  environment: "{{ env_vars }}"
  register: aws_access_key_id


- name: Stop EC2 instances
  become: false
  environment: "{{ env_vars }}"
  community.aws.ec2_instance:
    aws_access_key: "{{ aws_access_key_id.stdout }}"
    aws_secret_key: "{{ aws_secret_access_key.stdout }}"
    filters:
      "tag:app": datapipeline
      instance-state-name: running
    state: stopped
    wait: yes
    region: us-east-1

# - name: Remove security group used to allow host reachability
#   become: false
#   environment: "{{ env_vars }}"
#   amazon.aws.ec2_group:
#     aws_access_key: "{{ aws_access_key_id.stdout }}"
#     aws_secret_key: "{{ aws_secret_access_key.stdout }}"
#     description: security group for kafka, epmd, couchdb, zookeeper, ssh
#     name: kafka-couchdb-zookeeper-security
#     state: absent
#     region: us-east-1

# - name: Remove VPC Subnet
#   become: false
#   environment: "{{ env_vars }}"
#   amazon.aws.ec2_vpc_subnet:
#     cidr: 10.10.2.0/24
#     region: us-east-1
#     state: absent
#     vpc_id: "{{ datapipeline_vpc.vpc.id }}"
#     tags:
#       app: datapipeline
#       name: datapipeline_vpc_subnet
#     aws_access_key: "{{ aws_access_key_id.stdout }}"
#     aws_secret_key: "{{ aws_secret_access_key.stdout }}"

# - name: Remove public route table for VPC
#   become: false
#   environment: "{{ env_vars }}"
#   community.aws.ec2_vpc_route_table:
#     aws_access_key: "{{ aws_access_key_id.stdout }}"
#     aws_secret_key: "{{ aws_secret_access_key.stdout }}"
#     vpc_id: "{{ datapipeline_vpc.vpc.id }}"
#     region: us-east-1
#     route_table_id: "{{ public_route_table.route_table.route_table_id }}"
#     lookup: id
#     state: absent

# - name: Remove Internet Gateway attached to VPC
#   become: false
#   environment: "{{ env_vars}} "
#   community.aws.ec2_vpc_igw:
#     aws_access_key: "{{ aws_access_key_id.stdout }}"
#     aws_secret_key: "{{ aws_secret_access_key.stdout }}"
#     vpc_id: "{{ datapipeline_vpc.vpc.id }}"
#     state: absent
#     region: us-east-1
#     tags:
#       app: datapipeline


# VPC Cannot be removed because there is no way to delete the default
# route table that is created with /associated with this VPC
# - name: Remove VPC
#   become: false
#   environment: "{{ env_vars }}"
#   amazon.aws.ec2_vpc_net:
#     name: datapipeline_vpc
#     cidr_block: 10.10.0.0/16
#     region: us-east-1
#     state: absent
#     tags:
#       app: datapipeline
#     aws_access_key: "{{ aws_access_key_id.stdout }}"
#     aws_secret_key: "{{ aws_secret_access_key.stdout }}"




